<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ListBoxDemo.Controls">

    <PathGeometry x:Key="TreeArrow">
        <PathGeometry.Figures>
            <PathFigureCollection>
                <PathFigure
                    IsClosed="True"
                    IsFilled="True"
                    StartPoint="0 0">
                    <PathFigure.Segments>
                        <PathSegmentCollection>
                            <LineSegment Point="0 6" />
                            <LineSegment Point="6 0" />
                        </PathSegmentCollection>
                    </PathFigure.Segments>
                </PathFigure>
            </PathFigureCollection>
        </PathGeometry.Figures>
    </PathGeometry>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Width="16"
                        Height="16"
                        Padding="5,5,5,5"
                        Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            Data="{StaticResource TreeArrow}"
                            Fill="Transparent"
                            Stroke="#FF989898">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                            <Setter TargetName="ExpandPath" Property="Fill" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            From="135"
                                            To="180"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ExpandPath"
                                            Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="135"
                                            Duration="0:0:0.25" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="ExpandPath" Property="Fill" Value="#FF595959" />
                            <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF262626" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="MouseOverBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#FCFDFE" />
            <GradientStop Offset="1" Color="#F2F7FE" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MouseOverBorder" Color="#B8D6FB" />

    <LinearGradientBrush x:Key="SelectedBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="#DCEBFC" />
            <GradientStop Offset="1" Color="#C1DBFC" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedBorder" Color="#7DA2CE" />

    <SolidColorBrush x:Key="SelectedInnerBorder" Color="#EBF4FD" />


    <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="local:TreeListView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListView}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type local:TreeListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TreeListViewItem}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Height="25" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TreeListViewNode">
        <Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}, Path=IsOpen, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TreeListViewNode">
                    <Border>
                        <Border Padding="{Binding LevelPadding}">
                            <StackPanel
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:TreeListViewItem}}, Path=IsOpen, Mode=TwoWay}" IsThreeState="False" />
                                <!--<ToggleButton IsChecked="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsExpanded, Mode=TwoWay}" Style="{StaticResource ExpandCollapseToggleStyle}" />-->
                                <TextBlock Text="{Binding Text}" />
                            </StackPanel>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>